from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import types

import config
from const.event.chat import Chat
from const.callback.delete import DeleteEvent
from const.event.status import Status
from const.event.priority import Priority
from const.event.repeatable import RepeatType, RepeatDays, OnlyDay
from const.callback.callback_types import InlineButtonType
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from const.event.repeatable import RepeatDays
from const.event.update import UpdatePropEvent

config = config.BotConfig()


"""
    –û—Ç–º–µ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–Ω–µ–π –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∏–≤–µ–Ω—Ç–∞.
"""
def get_days_of_week_keyboard(selected_days: list[str] = None) -> InlineKeyboardMarkup:
    selected_days = selected_days or []
    buttons = []

    for day in RepeatDays:
        is_selected = day.value in selected_days
        text = f"üî∏{day.value}" if is_selected else day.value
        buttons.append([InlineKeyboardButton(
            text=text,
            callback_data=day.value
        )])

    buttons.append([
        InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=InlineButtonType.CONFIRM.value),
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=InlineButtonType.RETURN.value),
    ])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_day_options_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(text=OnlyDay.TODAY.value, callback_data=OnlyDay.TODAY.value))
    builder.row(types.InlineKeyboardButton(text=config.back_text, callback_data=InlineButtonType.RETURN.value))
    builder.row(types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value))
    return builder.as_markup(resize_keyboard=True)


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def get_cancel_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value))
    return builder.as_markup(resize_keyboard=True)


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –¥–ª—è –æ—Ç–º–µ–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def get_cancel_return_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(text=config.back_text, callback_data=InlineButtonType.RETURN.value))
    builder.row(types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value))
    return builder.as_markup(resize_keyboard=True)


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∏–≤–µ–Ω—Ç–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def get_repeatable_type_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    inline_keyboard = [
        types.InlineKeyboardButton(text=RepeatType.EVERY_DAY.value, callback_data=RepeatType.EVERY_DAY.value),
        types.InlineKeyboardButton(text=RepeatType.EVERY_WEEK.value, callback_data=RepeatType.EVERY_WEEK.value),
        types.InlineKeyboardButton(text=RepeatType.EVERY_MONTH.value, callback_data=RepeatType.EVERY_MONTH.value),
        types.InlineKeyboardButton(text=RepeatType.EVERY_YEAR.value, callback_data=RepeatType.EVERY_YEAR.value),
        types.InlineKeyboardButton(text=RepeatType.ONLY_DAY.value, callback_data=RepeatType.ONLY_DAY.value),
        types.InlineKeyboardButton(text=config.back_text, callback_data=InlineButtonType.RETURN.value),
        types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value)]
    for button in inline_keyboard:
        builder.row(button)
    return builder.as_markup(resize_keyboard=True)


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∏–≤–µ–Ω—Ç–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ —Å–æ–±—ã—Ç–∏–π.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def get_priority_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    inline_keyboard = [
        types.InlineKeyboardButton(text=Priority.LOW.value, callback_data=Priority.LOW.value),
        types.InlineKeyboardButton(text=Priority.MEDIUM.value, callback_data=Priority.MEDIUM.value),
        types.InlineKeyboardButton(text=Priority.HIGH.value, callback_data=Priority.HIGH.value),
        types.InlineKeyboardButton(text=Priority.CRITICAL.value, callback_data=Priority.CRITICAL.value),
    ]
    for button in inline_keyboard:
        builder.row(button)
    builder.row(types.InlineKeyboardButton(text=config.back_text, callback_data=InlineButtonType.RETURN.value))
    builder.row(types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value))
    return builder.as_markup(resize_keyboard=True)


def get_update_status_keyboard(event_id: int) -> InlineKeyboardMarkup:
    buttons = [
        types.InlineKeyboardButton(
            text=status.value,
            callback_data=f"select_status:{event_id}:{status.name}"
        )
        for status in Status
    ]
    return InlineKeyboardMarkup(inline_keyboard=[[btn] for btn in buttons])


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∏–≤–µ–Ω—Ç–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–±—ã—Ç–∏–π.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def get_status_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text=Status.TO_DO.value, callback_data=Status.TO_DO.value))
    builder.add(types.InlineKeyboardButton(text=Status.PROCESSING.value, callback_data=Status.PROCESSING.value))
    builder.add(types.InlineKeyboardButton(text=Status.DONE.value, callback_data=Status.DONE.value))
    builder.row(types.InlineKeyboardButton(text=config.back_text, callback_data=InlineButtonType.RETURN.value),
                types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value),
                width=8)
    return builder.as_markup(resize_keyboard=True)


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∏–ª—å—Ç—Ä–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def get_private_events_filter_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ü–æ —Å—Ç–∞—Ç—É—Å—É", callback_data='status'))
    builder.add(types.InlineKeyboardButton(text="–ü–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É", callback_data='priority'))
    builder.add(types.InlineKeyboardButton(text="–í—Å–µ", callback_data="all"))
    builder.row(types.InlineKeyboardButton(text="–ì—Ä—É–ø–ø–æ–≤—ã–µ", callback_data="group"))
    builder.row(types.InlineKeyboardButton(text="–õ–∏—á–Ω—ã–π —á–∞—Ç", callback_data="private"))
    builder.row(
        types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value), width=8)
    return builder.as_markup(resize_keyboard=True)


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∏–ª—å—Ç—Ä–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ.
"""
def get_group_events_filter_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="–ü–æ —Å—Ç–∞—Ç—É—Å—É", callback_data='status'))
    builder.add(types.InlineKeyboardButton(text="–ü–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É", callback_data='priority'))
    builder.add(types.InlineKeyboardButton(text="–í—Å–µ", callback_data="all"))
    builder.row(
        types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value), width=8)
    return builder.as_markup(resize_keyboard=True)


def get_only_day_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row()


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç –∏–ª–∏ –≤ –≥—Ä—É–ø–ø—É.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def get_chat_type_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(text="–í —ç—Ç–æ—Ç —á–∞—Ç", callback_data=Chat.PRIVATE.value)
    )
    builder.row(
        types.InlineKeyboardButton(text="–í –≥—Ä—É–ø–ø—É (–±–æ—Ç –¥–æ–ª–∂–µ–Ω —Ç–∞–º –±—ã—Ç—å)", callback_data=Chat.GROUP.value)
    )
    builder.row(types.InlineKeyboardButton(text=config.back_text, callback_data=InlineButtonType.RETURN.value),
                types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value),
                width=8)
    return builder.as_markup(resize_keyboard=True)


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥–∞ /delete.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def get_delete_type_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(text="–í—Å–µ", callback_data=DeleteEvent.DELETE_ALL.value),
    )
    builder.row(types.InlineKeyboardButton(text=config.cancel_title, callback_data=InlineButtonType.CANCEL.value),
                width=8)
    return builder.as_markup(resize_keyboard=True)


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–ª–ª–±—ç–∫-–∫–Ω–æ–ø–∫–∏ –ò–∑–º–µ–Ω–∏—Ç—å.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def update_event_keyboard(event_id: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(text=UpdatePropEvent.DESCRIPTION.value, callback_data=f"update_description:{event_id}"),
        types.InlineKeyboardButton(text=UpdatePropEvent.STATUS.value, callback_data=f"update_status:{event_id}"),
        types.InlineKeyboardButton(text=UpdatePropEvent.PRIORITY.value, callback_data=f"update_priority:{event_id}"),
    )
    builder.row(types.InlineKeyboardButton(text=config.back_text, callback_data=f"return_to_event:{event_id}"), width=8)
    return builder.as_markup(resize_keyboard=True)


"""
    –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–±—ã—Ç–∏–π.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
"""
def get_event_action_keyboard(event_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–ò–∑–º–µ–Ω–∏—Ç—å",
                    callback_data=f"update_event:{event_id}"
                ),
                InlineKeyboardButton(
                    text="‚ùå –£–¥–∞–ª–∏—Ç—å",
                    callback_data=f"delete_event:{event_id}"
                )
            ]
        ]
    )
