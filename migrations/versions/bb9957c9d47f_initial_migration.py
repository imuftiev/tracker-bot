"""Initial migration

Revision ID: bb9957c9d47f
Revises: 
Create Date: 2025-06-20 10:58:31.798684

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bb9957c9d47f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_user_id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', postgresql.ENUM('TO_DO', 'PROCESSING', 'DONE', name='status_enum'), nullable=False),
    sa.Column('priority', postgresql.ENUM('CRITICAL', 'HIGH', 'MEDIUM', 'LOW', name='priority_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('repeatable', sa.Boolean(), nullable=False),
    sa.Column('sent', sa.Boolean(), nullable=False),
    sa.Column('remind_at', sa.DateTime(), nullable=False),
    sa.Column('remind_time', sa.Time(), server_default=sa.text("'08:00:00'"), nullable=False),
    sa.Column('repeat_type', postgresql.ENUM('EVERY_DAY', 'EVERY_WEEK', 'EVERY_MONTH', 'EVERY_YEAR', 'ONLY_DAY', 'IN_PARTICULAR_DAY', name='repeat_type_enum'), nullable=False),
    sa.Column('days_of_week', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('chat_name', sa.String(length=10), nullable=True),
    sa.Column('telegram_chat_id', sa.BigInteger(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('events')
    op.drop_table('users')
    # ### end Alembic commands ###
